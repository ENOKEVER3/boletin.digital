/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Classes.Course;
import Classes.Division;
import Classes.Orientation;
import Classes.Subject;
import Classes.User;
import Classes.Year;
import Utils.Combo;
import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author acer
 */
public class ManageSubject extends javax.swing.JFrame {

    /**
     * Creates new form ManageSubject
     */
    public ManageSubject() {
        initComponents();
        changeBoxs();
    }
    
    Menu menu;
    ArrayList teachersCod;
    int oricod;
    int anocod;
    int curcod;
    int teacherCod;
    String division;
    
    private String userToAsingUsername;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel11 = new javax.swing.JLabel();
    jLabel13 = new javax.swing.JLabel();
    jButton1 = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    subjectBox = new javax.swing.JComboBox();
    jLabel5 = new javax.swing.JLabel();
    yearBox = new javax.swing.JComboBox();
    orientationBox = new javax.swing.JComboBox();
    jLabel6 = new javax.swing.JLabel();
    exitManageSubject = new javax.swing.JButton();
    jLabel7 = new javax.swing.JLabel();
    jButton3 = new javax.swing.JButton();
    teachersBox = new javax.swing.JComboBox<>();
    jLabel3 = new javax.swing.JLabel();
    deleteButton = new javax.swing.JButton();
    addButton = new javax.swing.JButton();
    jLabel12 = new javax.swing.JLabel();
    divisionBox = new javax.swing.JComboBox<>();
    jSeparator1 = new javax.swing.JSeparator();

    jLabel11.setText("jLabel11");

    jLabel13.setText("jLabel13");

    jButton1.setText("jButton1");

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setResizable(false);
    addWindowListener(new java.awt.event.WindowAdapter() {
      public void windowActivated(java.awt.event.WindowEvent evt) {
        formWindowActivated(evt);
      }
      public void windowClosed(java.awt.event.WindowEvent evt) {
        formWindowClosed(evt);
      }
    });

    jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    jLabel1.setText("Administración de materias");

    jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    jLabel2.setText("Materia:");

    subjectBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "                         ", "Matemática", "Lengua" }));
    subjectBox.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        subjectBoxItemStateChanged(evt);
      }
    });
    subjectBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        subjectBoxActionPerformed(evt);
      }
    });

    jLabel5.setText("Año:");

    yearBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "                    ", "Primero", "Segundo", "Tercero", "Cuarto", "Quinto", "Sexto", "Séptimo" }));
    yearBox.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        yearBoxItemStateChanged(evt);
      }
    });
    yearBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        yearBoxActionPerformed(evt);
      }
    });

    orientationBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "                             ", "General", "Informática", "Electromecánica" }));
    orientationBox.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        orientationBoxItemStateChanged(evt);
      }
    });
    orientationBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        orientationBoxActionPerformed(evt);
      }
    });

    jLabel6.setText("Orientación:");

    exitManageSubject.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    exitManageSubject.setText("Salir");
    exitManageSubject.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        exitManageSubjectActionPerformed(evt);
      }
    });

    jLabel7.setText("Asignar un profesor a una materia");

    jButton3.setText("BUSCAR");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton3ActionPerformed(evt);
      }
    });

    jLabel3.setText("Profesores:");

    deleteButton.setText("ELIMINAR");
    deleteButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        deleteButtonActionPerformed(evt);
      }
    });

    addButton.setText("AGREGAR");
    addButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        addButtonActionPerformed(evt);
      }
    });

    jLabel12.setText("División");

    divisionBox.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        divisionBoxItemStateChanged(evt);
      }
    });
    divisionBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        divisionBoxActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addContainerGap(289, Short.MAX_VALUE)
            .addComponent(exitManageSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(jLabel1)
                  .addComponent(jLabel7)
                  .addComponent(subjectBox, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(jLabel2)
                  .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                      .addComponent(jLabel5)
                      .addComponent(yearBox, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                      .addComponent(jButton3))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                      .addComponent(jLabel6)
                      .addComponent(orientationBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                      .addComponent(jLabel12)
                      .addComponent(divisionBox, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))))
              .addGroup(layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(jLabel3)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(teachersBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                      .addComponent(deleteButton)
                      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                      .addComponent(addButton))))))
            .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(61, 61, 61))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(16, 16, 16)
        .addComponent(jLabel1)
        .addGap(13, 13, 13)
        .addComponent(jLabel7)
        .addGap(31, 31, 31)
        .addComponent(jLabel2)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(subjectBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel5)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(yearBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel12)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(divisionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel6)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(orientationBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addGap(18, 18, 18)
        .addComponent(jButton3)
        .addGap(29, 29, 29)
        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(13, 13, 13)
        .addComponent(jLabel3)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(teachersBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(deleteButton)
          .addComponent(addButton))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
        .addComponent(exitManageSubject)
        .addContainerGap())
    );

    pack();
    setLocationRelativeTo(null);
  }// </editor-fold>//GEN-END:initComponents

    private void exitManageSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitManageSubjectActionPerformed
      menu.setVisible(true);
      dispose();
    }//GEN-LAST:event_exitManageSubjectActionPerformed

  private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
    
  }//GEN-LAST:event_formWindowActivated

  private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    updateTeachersList();
  }//GEN-LAST:event_jButton3ActionPerformed

  private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
    if(!(JOptionPane.showConfirmDialog(null, "Está seguro de eliminar?") == 0)) return;
    
    if(teachersBox.getSelectedItem() != "") {
      int teacherCode = (int) teachersCod.get(teachersBox.getSelectedIndex() + 2);
      Subject.deleteSubjectTeacher((int) teachersCod.get(teachersBox.getSelectedIndex() + 2), oricod, anocod, curcod, (int) teachersCod.get(0), (int) teachersCod.get(1));
      updateTeachersList();
    } else {
      JOptionPane.showMessageDialog(null, "Seleccione un profesor");
    }
    
    
  }//GEN-LAST:event_deleteButtonActionPerformed

  private void subjectBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_subjectBoxItemStateChanged
    blockButtons();
  }//GEN-LAST:event_subjectBoxItemStateChanged

  private void yearBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_yearBoxItemStateChanged
    blockButtons();
  }//GEN-LAST:event_yearBoxItemStateChanged

  private void orientationBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_orientationBoxItemStateChanged
    blockButtons();
  }//GEN-LAST:event_orientationBoxItemStateChanged

  private void divisionBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_divisionBoxItemStateChanged
    blockButtons();
  }//GEN-LAST:event_divisionBoxItemStateChanged

  private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
    this.setVisible(false);
    TeachersList teacherList = new TeachersList();
    teacherList.setVisible(true);
    teacherList.manageSubject = this;
  }//GEN-LAST:event_addButtonActionPerformed

  private void subjectBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectBoxActionPerformed

  }//GEN-LAST:event_subjectBoxActionPerformed

  private void yearBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearBoxActionPerformed

  }//GEN-LAST:event_yearBoxActionPerformed

  private void orientationBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orientationBoxActionPerformed

  }//GEN-LAST:event_orientationBoxActionPerformed

  private void divisionBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionBoxActionPerformed
    
  }//GEN-LAST:event_divisionBoxActionPerformed

  private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    menu.setVisible(true);
  }//GEN-LAST:event_formWindowClosed

    
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton addButton;
  private javax.swing.JButton deleteButton;
  private javax.swing.JComboBox<String> divisionBox;
  private javax.swing.JButton exitManageSubject;
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton3;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JLabel jLabel13;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JComboBox orientationBox;
  private javax.swing.JComboBox subjectBox;
  private javax.swing.JComboBox<String> teachersBox;
  private javax.swing.JComboBox yearBox;
  // End of variables declaration//GEN-END:variables

  private boolean checkEmptyFields() {
    if(subjectBox.getSelectedIndex() == 0) {
      JOptionPane.showMessageDialog(null, "Indique la materia");
    } else if(yearBox.getSelectedIndex() == 0) {
      JOptionPane.showMessageDialog(null, "Indique el año");
    } else if(orientationBox.getSelectedIndex() == 0) {
      JOptionPane.showMessageDialog(null, "Indique la orientación");
    } else if(divisionBox.getSelectedIndex() == 0) {
      JOptionPane.showMessageDialog(null, "Indique la división");
    } else {
      return false;
    }

    return true;
  }

  private void changeBoxs() {
    Combo.setComboBoxItems(Year.getYears(false), yearBox);
    Combo.setComboBoxItems(Orientation.getOrientations(false), orientationBox);
    Combo.setComboBoxItems(Subject.getSubjects(false), subjectBox);
    Combo.setComboBoxItems(Division.getDivisions(false), divisionBox);
  }
  
  public void cleanFields() {
      yearBox.setSelectedIndex(0);
      orientationBox.setSelectedIndex(0);
      divisionBox.setSelectedIndex(0);
      subjectBox.setSelectedIndex(0);
  }
  
  public void updateTeachersList(){
    if(checkEmptyFields()) return;
    oricod = Orientation.getOrientationcod(orientationBox.getSelectedItem().toString());
    anocod = Year.getYearcod(yearBox.getSelectedItem().toString(), oricod);
    division = divisionBox.getSelectedItem().toString();
    
    curcod = Course.getCurcodByDivsion(oricod, anocod, division, false);
    
    if(curcod != 0) {
      teachersBox.removeAllItems();
      teachersCod = Subject.getTeachersCod(oricod, anocod, curcod,  subjectBox.getSelectedItem().toString(), false, 0);
      
      for(int i = 2; i < teachersCod.size(); i++) {
        teachersBox.addItem(User.getFullNameByCod((int) teachersCod.get(i)));
      }
      
      JOptionPane.showMessageDialog(null, "Lista de profesores actualizada");
      enableButtons();
    } else {
      JOptionPane.showMessageDialog(null, "El curso no existe");
      cleanFields();
      blockButtons();
    }
  }

  private void blockButtons() {
    deleteButton.setEnabled(false);
    addButton.setEnabled(false);
    teachersBox.setEnabled(false);
  }
  
  private void enableButtons() {
    deleteButton.setEnabled(true);
    addButton.setEnabled(true);
    teachersBox.setEnabled(true);
  }
  
  public void addTeacher(int percod) throws ParseException {
    if(Subject.registerTeacherInSubject(percod, oricod, anocod, curcod, (int) teachersCod.get(0), (int) teachersCod.get(1))) {
      updateTeachersList();
    } else {
      JOptionPane.showMessageDialog(null, "No se ha podido agregar al profeosr");
    }
  }
}
